{"ast":null,"code":"import axios from \"axios\";\n\n// Create a new instance of Axios\nconst api = axios.create({\n  baseURL: \"http://localhost:8082/api\"\n});\n\n// Add a request interceptor to modify requests before they are sent\napi.interceptors.request.use(config => {\n  // Retrieve the latest token value from the localStorage\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    // Set the token in the request header\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n    config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\n  }\n  return config;\n}, error => {\n  // Do something with the request error, like logging it\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to add CORS headers\napi.interceptors.response.use(response => {\n  // Add CORS headers\n  response.headers[\"Access-Control-Allow-Origin\"] = \"*\";\n  response.headers[\"Access-Control-Allow-Methods\"] = \"GET, POST, PUT, DELETE, OPTIONS\";\n  response.headers[\"Access-Control-Allow-Headers\"] = \"Content-Type, Authorization\";\n  return response;\n}, error => {\n  // Do something with the response error, like logging it\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response"],"sources":["/Users/boss/Downloads/fund-raising-updated/fund-raising-ui/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// Create a new instance of Axios\nconst api = axios.create({\n  baseURL: \"http://localhost:8082/api\",\n});\n\n// Add a request interceptor to modify requests before they are sent\napi.interceptors.request.use(\n  (config) => {\n    // Retrieve the latest token value from the localStorage\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      // Set the token in the request header\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\n    }\n    return config;\n  },\n  (error) => {\n    // Do something with the request error, like logging it\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to add CORS headers\napi.interceptors.response.use(\n  (response) => {\n    // Add CORS headers\n    response.headers[\"Access-Control-Allow-Origin\"] = \"*\";\n    response.headers[\"Access-Control-Allow-Methods\"] =\n      \"GET, POST, PUT, DELETE, OPTIONS\";\n    response.headers[\"Access-Control-Allow-Headers\"] =\n      \"Content-Type, Authorization\";\n    return response;\n  },\n  (error) => {\n    // Do something with the response error, like logging it\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACT;IACAD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAI,UAASH,KAAM,EAAC;IACnDD,MAAM,CAACI,OAAO,CAAC,6BAA6B,CAAC,GAAG,GAAG;EACrD;EACA,OAAOJ,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAX,GAAG,CAACG,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ;EACAA,QAAQ,CAACJ,OAAO,CAAC,6BAA6B,CAAC,GAAG,GAAG;EACrDI,QAAQ,CAACJ,OAAO,CAAC,8BAA8B,CAAC,GAC9C,iCAAiC;EACnCI,QAAQ,CAACJ,OAAO,CAAC,8BAA8B,CAAC,GAC9C,6BAA6B;EAC/B,OAAOI,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}